#############################################################################
#
#              Big Data & Machine Learning for Applied Economics                   
#                               Problem Set 1
#                                   Grupo: 
#                      Paula Alarcón    Código: 201812516
#                      Martín Lara      Código: 201711300
#                      Nicolás González Código: 201813698
#
#############################################################################
#
#                   Punto 1: scrapping y limpieza de datos
#
#############################################################################

# Scrapping de datos GEIH ---------------------------------------------------

# Limpio mi lugar de trabajo
rm(list=ls())

# Asigno un directorio donde me guarde los resultados: 
setwd(choose.dir())

#se cargan los paquetes necesarios
require(pacman)
p_load(tidyverse, rvest, heatmaply, plyr, dplyr, stargazer, VIM, boot, readxl, lubridate, tidyr, zoo, psych)

#Se crea un vector con los links de las páginas dónde están los datos
url_base <- paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
url_base #visualización del vector

#Iterando en cada uno de las urls de la página se descargan los datos y se juntan en un data frame
dt <- data.frame()
for (url in url_base) {
  print(url)
  temp <- read_html(url) %>% 
    html_table() 
  temp <- as.data.frame(temp[[1]])
  dt <- rbind(dt, temp)
}
View(dt) #el data frame resultante tiene 178 variables y 32177 observaciones

write.csv(dt, file = "data_ps1.csv")

# Limpieza de datos ------------------------------------------------------------
#Creamos una base con las variables de interés

dt_total <- dt %>% select(college, cotPension, cuentaPropia, totalHoursWorked, ingtotob, ingtotes, ingtot, directorio, p6580s1, p6630s6, p6760, p6750, p7500s1a1, p7500s2a1, p7510s5a1, maxEducLevel, oficio, p6426 , age, sex, dsi, fex_c, iof1es, iof2es, iof6es, hoursWorkUsual, estrato1)

#Filtramos a los menores de edad y a los desempleados

dt_interes <- dt_total %>% subset(age>=18) %>% 
  subset(dsi==0)#depuramos a todos los menores de edad

#Sacamos el porcentaje de missing values por variable
na_percentage <-sapply(dt_interes, function(y) sum(length(which(is.na(y))))/length(dt_interes$directorio))#creo una función para saber cuantos NAs hay por columna 
data_x <- as.data.frame(na_percentage)
View(na_percentage)


# En un primer proceso de eliminación de variables, eliminamos aquellas con un 
#alto porcentaje de missing values
var <- cbind(Var_name = rownames(data_x), data_x)
rownames(var) <- 1:nrow(var)
var_for_drop <- var[var$na_percentage>=0.45,]
var_for_keep <- var[var$na_percentage<0.45,]
count(var) # Contamos cuantas variables tenemos en total (=27)
count(var_for_keep) # Contamos cuantas variables tienen % missing menor o igual a 45% (=19)
count(var_for_drop) # Contamos cuantas variables tienen % missing mayor a 45% (=8)

#Seleccionamos las variables que cumplen con el requisito y sacamos estadísticas descriptivas
dt_final <- dt_interes %>% select(age, college, cotPension, cuentaPropia, directorio, dsi, estrato1, fex_c, hoursWorkUsual, ingtot, ingtotob, maxEducLevel, oficio, p6426, p7500s1a1, p7500s2a1, p7510s5a1, sex, totalHoursWorked)
View(dt_final)
stargazer(dt_final, type='latex')

#Imputamos Missing Values y comparamos estadísticas descriptivas
dt_imputado <-  kNN(dt_final, variable = c("cotPension", "hoursWorkUsual", "p6426", "totalHoursWorked"), k = 6)
summary(dt_imputado)
stargazer(dt_imputado, type='latex')

#############################################################################
#
#              Big Data & Machine Learning for Applied Economics                   
#                               Problem Set 1
#                                   Grupo: 
#                      Paula Alarcón    Código: 201812516
#                      Martín Lara      Código: 201711300
#                      Nicolás González Código: 201813698
#
#############################################################################
#
#                      Punto 2: Age-Earnings Profile
#
#############################################################################

# Regresión de Earnings
Reg_earnings <- lm(dt_imputado$ingtot ~ dt_imputado$age + I(dt_imputado$age^2), weights = fex_c)
stargazer(Reg_earnings, type="latex")

#Plot Earnings = beta1 + beta2Age + beta3Age2 + u, señalar el peak e intentar poner IC

#Intervalos de confianza
bootfunct <- function(data, index){
  coef(lm(ingtot ~ age + I(age^2), data = dt_imputado, weights = fex_c, subset = index))
}

bootstrap1 <- boot(dt_imputado, bootfunct, R=1000)
output_bootstrap1 <- t(rbind(bootstrap1$t0, apply(bootstrap1$t, 2, function(x) sd(x))))


coeffunct <- function(data, index){
  reg <- lm(ingtot ~ age + I(age^2), data = dt_imputado, weights = fex_c, subset = index)
  coefs <- reg$coefficients
  b2 <- coefs[2]
  b3 <- coefs[3]
  peak <- -b2/(2*b3)
  return(peak)
}

bootstrap11 <- boot(dt_imputado, coeffunct, R=1000)
output_bootstrap11 <- t(rbind(bootstrap11$t0, apply(bootstrap11$t, 2, function(x) sd(x))))

alpha <- 0.05
min <- output_bootstrap11[1,1]-qnorm(1-(alpha/2))*output_bootstrap11[1,2]#50.9
max <- output_bootstrap11[1,1]+qnorm(1-(alpha/2))*output_bootstrap11[1,2]#53

b11 <- bootstrap1$t0[1]#-794112
b12 <- bootstrap1$t0[2]#101533
b13 <- bootstrap1$t0[3]#-977

############################################################################
#
#              Big Data & Machine Learning for Applied Economics                   
#                               Problem Set 1
#                                   Grupo: 
#                      Paula Alarcón    Código: 201812516
#                      Martín Lara      Código: 201711300
#                      Nicolás González Código: 201813698
#
#############################################################################
#
#                      Punto 3: Gender Earnings Gap
#
#############################################################################

#Creamos variable fem, el logaritmo de ingresos y demás variables
dt_imputado2 <- dt_imputado %>% 
  mutate(
    fem = ifelse(sex==1, 0, 1),
    lningtot = ifelse(ingtot==0, NA, log(ingtot))
  )

# Regresión simple fem
reg_fem <- lm(dt_imputado2$lningtot ~ dt_imputado2$fem, weights = fex_c)
stargazer(reg_fem, type = "latex")

#Dividimos la base en hombres y mujeres
dt_fem <- dt_imputado %>% subset(sex==0) 
dt_male <- dt_imputado %>% subset(sex==1)
View(dt_fem)


#Intervalos de confianza mujeres
bootfunctfem <- function(data, index){
  coef(lm(lningtot ~ age + I(age^2), data = dt_fem, weights = fex_c, subset = index))
}

bootstrap2 <- boot(dt_fem, bootfunct, R=1000)
output_bootstrap2 <- t(rbind(bootstrap2$t0, apply(bootstrap2$t, 2, function(x) sd(x))))


coeffunct2 <- function(data, index){
  reg <- lm(lningtot ~ age + I(age^2), data = dt_fem, weights = fex_c, subset = index)
  coefs <- reg$coefficients
  b2 <- coefs[2]
  b3 <- coefs[3]
  peak <- -b2/(2*b3)
  return(peak)
}

bootstrap21 <- boot(dt_fem, coeffunct, R=1000)
output_bootstrap21 <- t(rbind(bootstrap21$t0, apply(bootstrap21$t, 2, function(x) sd(x))))

alpha <- 0.05
minfem <- output_bootstrap21[1,1]-qnorm(1-(alpha/2))*output_bootstrap21[1,2]#50.6
maxfem <- output_bootstrap21[1,1]+qnorm(1-(alpha/2))*output_bootstrap21[1,2]#54

b21 <- bootstrap2$t0[1]#-576861
b22 <- bootstrap2$t0[2]#88606
b23 <- bootstrap2$t0[3]#-847

#Plot mujeres Earnings = beta1 + beta2Age + beta3Age2 + u pero solo para mujeres


#Intervalos de confianza hombres
bootfunctmale <- function(data, index){
  coef(lm(lningtot ~ age + I(age^2), data = dt_male, weights = fex_c, subset = index))
}

bootstrap3 <- boot(dt_male, bootfunct, R=1000)
output_bootstrap3 <- t(rbind(bootstrap3$t0, apply(bootstrap3$t, 2, function(x) sd(x))))


coeffunct3 <- function(data, index){
  reg <- lm(lningtot ~ age + I(age^2), data = dt_male, weights = fex_c, subset = index)
  coefs <- reg$coefficients
  b2 <- coefs[2]
  b3 <- coefs[3]
  peak <- -b2/(2*b3)
  return(peak)
}

bootstrap31 <- boot(dt_male, coeffunct, R=1000)
output_bootstrap31 <- t(rbind(bootstrap31$t0, apply(bootstrap31$t, 2, function(x) sd(x))))

alpha <- 0.05
minmale <- output_bootstrap31[1,1]-qnorm(1-(alpha/2))*output_bootstrap31[1,2]#50.5
maxmale <- output_bootstrap31[1,1]+qnorm(1-(alpha/2))*output_bootstrap31[1,2]#54.3

b31 <- bootstrap3$t0[1]#-598673
b32 <- bootstrap3$t0[2]#89417
b33 <- bootstrap3$t0[3]#-853

#Plot hombres Earnings = beta1 + beta2Age + beta3Age2 + u pero solo para hombres

#Regresiones condicionales Long y FWL 
dt_imputado2 <- dt_imputado2 %>% 
  mutate(
    age2 = age^2,
    agefem = age*fem,
    age2fem =age2*fem,
    oficiofem = oficio*fem,
    maxEducLevelfem = maxEducLevel*fem,
    hoursWorkUsualfem = hoursWorkUsual*fem,
    p6426_impfem = p6426_imp*fem,
    collegefem = college*fem,
    ingreso = ingtot+p7500s1a1+p7500s2a1+ p7510s5a1,
    lningreso = ifelse(ingreso==0, NA, log(ingreso))
  )

#Modelo sin restricción , es decir con female
dt_imputado2 <- dt_imputado2 %>% 
  mutate(
    educ1 = ifelse(maxEducLevel==1, 1, 0),
    educ1fem = educ1*fem,
    educ3 = ifelse(maxEducLevel==3, 1, 0),
    educ3fem = educ3*fem,
    educ4 = ifelse(maxEducLevel==4, 1, 0),
    educ4fem = educ4*fem,
    educ5 = ifelse(maxEducLevel==5, 1, 0),
    educ5fem = educ5*fem,
    educ6 = ifelse(maxEducLevel==6, 1, 0),
    educ6fem = educ6*fem,
    educ7 = ifelse(maxEducLevel==7, 1, 0),
    educ7fem = educ7*fem
  )

reg_condfem3 <- lm(lningtot ~ fem + educ3 + educ3fem + educ4 + educ4fem + educ5 + educ5fem + educ6 + educ6fem + educ7 +
                     hoursWorkUsual+ cuentaPropia + age + age2, weights = fex_c, data=dt_res)
#Modelo restringido
reg_cond <- lm(lningtot ~ educ3 +  educ4  + educ5 +  educ6  + educ7 +
                     hoursWorkUsual+ cuentaPropia + age + age2, weights = fex_c, data=dt_res)
stargazer(reg_condfem3, reg_cond, type = "latex")


#FWL
dt_res=dt_imputado2
dt_res <- dt_res %>% drop_na()

dt_res <- dt_res %>% mutate(
  res_fem=lm(fem ~ cuentaPropia, data = dt_res)$residuals,
  res_lningtot=lm(lningtot ~ cuentaPropia, data = dt_res)$residuals,
  res_educ1=lm(educ1 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ1fem=lm(educ1fem ~ cuentaPropia, data = dt_res)$residuals,
  res_educ3=lm(educ3 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ3fem=lm(educ3fem ~ cuentaPropia, data = dt_res)$residuals,
  res_educ4=lm(educ4 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ4fem=lm(educ4fem ~ cuentaPropia, data = dt_res)$residuals,
  res_educ5=lm(educ5 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ5fem=lm(educ5fem ~ cuentaPropia, data = dt_res)$residuals,
  res_educ6=lm(educ6 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ6fem=lm(educ6fem ~ cuentaPropia, data = dt_res)$residuals,
  res_educ7=lm(educ7 ~ cuentaPropia, data = dt_res)$residuals,
  res_educ7fem=lm(educ7fem ~ cuentaPropia, data = dt_res)$residuals, 
  res_hoursWorkUsual=lm(hoursWorkUsual ~ cuentaPropia, data = dt_res)$residuals,
  res_age=lm(age ~ cuentaPropia, data=dt_res)$residuals,
  res_age2=lm(age2 ~ cuentaPropia, data=dt_res)$residuals
)

reg_condfem3 <- lm(lningtot ~ fem + educ3 + educ3fem + educ4 + educ4fem + educ5 + educ5fem + educ6 + educ6fem + educ7 +
                     hoursWorkUsual+ cuentaPropia + age + age2, weights = fex_c, data=dt_res)

reg_res <- lm(res_lningtot ~ res_fem + res_educ3 + res_educ3fem + res_educ4 + res_educ4fem + res_educ5 + res_educ5fem + res_educ6 + res_educ6fem + res_educ7 + res_hoursWorkUsual + res_age + res_age2, data = dt_res, weights = dt_res$fex_c)



stargazer(reg_res,reg_condfem3, type = "latex")

############################################################################
#
#              Big Data & Machine Learning for Applied Economics                   
#                               Problem Set 1
#                                   Grupo: 
#                      Paula Alarcón    Código: 201812516
#                      Martín Lara      Código: 201711300
#                      Nicolás González Código: 201813698
#
#############################################################################
#
#                      Punto 4: Predicting Earnings
#
#############################################################################

require(pacman)
p_load(tidyverse, rvest, heatmaply, plyr, dplyr, stargazer, VIM, boot)

#Usando la Base dt_immputado crerada en el punto 1 usaremos, entre otros, los modelos de los
#puntos anteriores  para predecir el ingreso de los individuos.

p_load(rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor, fastDummies)

set.seed(4444) #establecemos una semilla para asegurar la reproducibilidad de los resultados

variables_categoricas <- maxEducLevel

for (v in variables_categoricas){ df[, v] <- as.factor(df[, v, drop = T])}


particion <- createDataPartition(y = dt_imputado$ingtotob,
                                 p = 0.7,
                                 list = F)
train <- dt_imputado[particion,]
test <- dt_imputado[-particion,]
#Usando el paquete caret Separamos la base en entrenamiento (70%) y prueba (30%)


# Predicciones ------------------------------------------------------------

#Usando el paquete caret entrenamos los 7 modelos .

modelo_1 <- train(ingtot ~ abs(sex-1),
                  data = train,
                  method = "lm",
                  )

modelo_2 <- train(ingtot ~ age + I(age^2),
                  data = train,
                  method = "lm",
                  )

modelo_3 <- train(ingtot ~ age + college*totalHoursWorked + sex,
                  data = train,
                  method = "lm",
                  )

modelo_4 <- train(ingtot ~ hoursWorkUsual*estrato1 + cotPension,
                  data = train,
                  method = "lm",
                  )


modelo_5 <- train(ingtot ~ hoursWorkUsual*estrato1 + cotPension + p6426,
                  data = train,
                  method = "lm",
                  )

modelo_6 <- train(ingtot ~ college + p7500s1a1 + p7500s2a1 + estrato1*hoursWorkUsual,
                  data = train,
                  method = "lm",
                  )

modelo_7 <- train(ingtot ~ hoursWorkUsual*estrato1 + cotPension + age + I(age^2) + abs(sex-1),
                  data = train,
                  method = "lm",
                  )

#predecimos en la base de prueba

pred_m1 <- predict(modelo_1, test)
pred_m2 <- predict(modelo_2, test)
pred_m3 <- predict(modelo_3, test)
pred_m4 <- predict(modelo_4, test)
pred_m5 <- predict(modelo_5, test)
pred_m6 <- predict(modelo_6, test)
pred_m7 <- predict(modelo_7, test)

MAE_m1 <- MAE(test$ingtot, pred_m1)
MAE_m2 <- MAE(test$ingtot, pred_m2)
MAE_m3 <- MAE(test$ingtot, pred_m3)
MAE_m4 <- MAE(test$ingtot, pred_m4)
MAE_m5 <- MAE(test$ingtot, pred_m5)
MAE_m6 <- MAE(test$ingtot, pred_m6)
MAE_m7 <- MAE(test$ingtot, pred_m7)

MAPE_m1 <- MAPE(test$ingtot, pred_m1)
MAPE_m2 <- MAPE(test$ingtot, pred_m2)
MAPE_m3 <- MAPE(test$ingtot, pred_m3)
MAPE_m4 <- MAPE(test$ingtot, pred_m4)
MAPE_m5 <- MAPE(test$ingtot, pred_m5)
MAPE_m6 <- MAPE(test$ingtot, pred_m6)
MAPE_m7 <- MAPE(test$ingtot, pred_m7)

RMSE_m1 <- RMSE(test$ingtot, pred_m1)
RMSE_m2 <- RMSE(test$ingtot, pred_m2)
RMSE_m3 <- RMSE(test$ingtot, pred_m3)
RMSE_m4 <- RMSE(test$ingtot, pred_m4)
RMSE_m5 <- RMSE(test$ingtot, pred_m5)
RMSE_m6 <- RMSE(test$ingtot, pred_m6)
RMSE_m7 <- RMSE(test$ingtot, pred_m7)

# Leave one out cross validation ------------------------------------------

loocv <- trainControl(method = "LOOCV")

pred_m1_loocv <- train(ingtot ~ abs(sex-1),
                        data = dt_imputado,
                        method = "lm",
                        trControl = loocv
                        )

pred_m3_loocv <- train(ingtot ~ age + college*totalHoursWorked + sex,
                  data = dt_imputado,
                  method = "lm",
                  trControl = loocv
                  )
stats <- data.frame(MAE=c(MAE_m1, MAE_m2, MAE_m3, MAE_m4, MAE_m5, MAE_m6, MAE_m7),
                    MAPE=c(MAPE_m1, MAPE_m2, MAPE_m3, MAPE_m4, MAPE_m5, MAPE_m6, MAPE_m7),
                    RMSE=c(RMSE_m1, RMSE_m2, RMSE_m3, RMSE_m4, RMSE_m5, RMSE_m6, RMSE_m7))
stargazer(stats, summary = F, title = "Metricas de predición")

stats_loocv1 <- data.frame(pred_m1_loocv$results)
stats_loocv3 <- data.frame(pred_m3_loocv$results)

stats_loocv <- rbind(stats_loocv1,stats_loocv3)

stats_loocv <- stats_loocv %>% select(c(RMSE, MAE)) %>% 
  

stargazer(stats_loocv, summary = F, title = "Metricas de predicción LOOCV")


